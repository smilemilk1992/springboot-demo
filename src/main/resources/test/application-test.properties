server.port=8888

###############################################
## Data Source Setting
###############################################
#数据库配置信息
spring.datasource.recomcrawl.username=root
spring.datasource.recomcrawl.password=710714
spring.datasource.recomcrawl.jdbc-url=jdbc:mysql://localhost:3306/chh?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.recomcrawl.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.recomcrawl.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.recomcrawl.initialSize=5
spring.datasource.recomcrawl.minIdle=5
spring.datasource.recomcrawl.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.recomcrawl.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.recomcrawl.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.recomcrawl.minEvictableIdleTimeMillis=300000
spring.datasource.recomcrawl.validationQuery=SELECT 1 FROM DUAL
spring.datasource.recomcrawl.testWhileIdle=true
spring.datasource.recomcrawl.testOnBorrow=false
spring.datasource.recomcrawl.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.recomcrawl.poolPreparedStatements=true
spring.datasource.recomcrawl.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.recomcrawl.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.recomcrawl.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.recomcrawl.useGlobalDataSourceStat=true


spring.datasource.recomworker.username=worker
spring.datasource.recomworker.password=worker
spring.datasource.recomworker.jdbc-url=jdbc:mysql://120.27.218.142:3306/test?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.recomworker.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.recomworker.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.recomworker.initialSize=5
spring.datasource.recomworker.minIdle=5
spring.datasource.recomworker.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.recomworker.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.recomworker.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.recomworker.minEvictableIdleTimeMillis=300000
spring.datasource.recomworker.validationQuery=SELECT 1 FROM DUAL
spring.datasource.recomworker.testWhileIdle=true
spring.datasource.recomworker.testOnBorrow=false
spring.datasource.recomworker.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.recomworker.poolPreparedStatements=true
spring.datasource.recomworker.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.recomworker.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.recomworker.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.recomworker.useGlobalDataSourceStat=true



#驼峰命名转换
mybatis.configuration.mapUnderscoreToCamelCase=true

#mybatis配置信息
mybatis.recom_crawl.mapper-locations=classpath:recom_crawl/*Mapper.xml
mybatis.recom_worker.mapper-locations=classpath:recom_worker/*Mapper.xml
mybatis.type-aliases-package=com.sohu.springbootdemo.Model

#打印myBatis的sql语句
#logging.level.com.sohu.springbootdemo.Dao=debug

#控制台打印sql语句
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

#logback日志配置
logging.config=classpath:logback-spring.xml

#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.serialization.indent-output=true




#
#
##=========redis基础配置=========
#spring.redis.database=0
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
##如果有密码
#spring.redis.password=
## 连接超时时间 单位 ms（毫秒）
#spring.redis.timeout=3000ms
##=========redis线程池设置=========
## 连接池中的最大空闲连接，默认值也是8。
#spring.redis.jedis.pool.max-idle=200
##连接池中的最小空闲连接，默认值也是0。
#spring.redis.jedis.pool.min-idle=200
## 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
#spring.redis.jedis.pool.max-active=2000
## 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
#spring.redis.jedis.pool.max-wait=1000ms